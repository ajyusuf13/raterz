{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyusuf/movie-rating-sideproject/src/pages/MyRatings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { db, auth } from \"../firebase\";\nimport styled from \"styled-components\";\nimport axios from 'axios';\nimport img from \"../NoMoviePoster.jpeg\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingsScreenContainer = styled.div`\n    position: relative;\n    height: calc(100vh - 70px);\n    width: 100vw;\n    display: block;\n    text-align: center;\n    align-items: center;\n    overflow: hidden;\n`;\n_c = RatingsScreenContainer;\nconst Image = styled.img`\n    border-radius: 3px;\n    width: 75px; \n    height: 125px;\n`;\n_c2 = Image;\nconst RatingsContainer = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    height: calc(100vh - 225px);\n`;\n_c3 = RatingsContainer;\nconst MovieRatings = styled.div`\n    width: 30%;\n    height: 67vh;\n    overflow: hidden;\n    // border: 1px solid #fff;\n    display: block;\n    border-radius: 1rem;\n    justify-content: center;\n    margin-left: 10em;\n    // background-color: #191414;\n    background-color: #111;\n\n`;\n_c4 = MovieRatings;\nconst TvRatings = styled.div`\n    width: 30%;\n    height: 67vh;\n    display: block;\n    border-radius: 1rem;\n    margin-right: 10em;\n    justify-content: center;\n    background-color: #111;\n\n`;\n_c5 = TvRatings;\nconst Table = styled.table`\n    width: 85%;\n    padding: 10px;\n    // border: 1px solid #fff;\n    border-radius: 7px;\n    margin-left: auto;\n    margin-right: auto;\n    // background:rgba(1,1,1,0.5);\n    background-color: #343434;\n`;\n_c6 = Table;\nconst TBody = styled.tbody`\n    display: block;\n    overflow-y: auto;\n    max-height: calc(65vh - 85px);\n`;\n_c7 = TBody;\nconst TRow = styled.tr`\n    display: flex;\n    margin: 5px;\n    align-items: center;\n\n    &:hover {\n        cursor: pointer;\n        background-color: lightgray;\n    }\n`;\n_c8 = TRow;\nconst TDInfo = styled.td`\n    display: block;\n    text-align: left;\n    padding: 10px;\n`;\n_c9 = TDInfo;\nconst RatingDiv = styled.div`\n    display: flex;\n    align-items: center;\n`;\n_c10 = RatingDiv;\nconst H3Tag = styled.h3`\n    margin-top: 2em;\n    font-size: 26px;\n`;\n_c11 = H3Tag;\nconst H4Tag = styled.h4`\n    margin-top: 1em;\n    font-size: 20px;\n    margin-bottom: 5px;\n    font-family: 'Dosis', sans-serif;\n`;\n_c12 = H4Tag;\nconst RatingNumberStrong = styled.strong`\n    margin-left: 7px;\n    margin-top: 4px;\n`;\n_c13 = RatingNumberStrong;\n\nconst MyRatings = () => {\n  _s();\n\n  const [movieRatings, setMovieRatings] = useState([]);\n  const [tvRatings, setTvRatings] = useState([]);\n  const [movieRatingsDict, setMovieRatingsDict] = useState({});\n  const [showRatingsDict, setShowRatingsDict] = useState({});\n  const navigate = useNavigate();\n  const API_KEY = \"9a637b178d3f0923dd00ef0550b24e90\";\n  const TV_DETAIL_URL = \"https://api.themoviedb.org/3/tv/\";\n  const MOVIE_DETAIL_URL = \"https://api.themoviedb.org/3/movie/\"; // + movieId + \n  //     \"?\" + new URLSearchParams({api_key: API_KEY});\n\n  useEffect(() => {\n    const movieIds = [];\n    const movies = [];\n    const showIds = [];\n    const shows = [];\n    let movieDict = {};\n    let showDict = {};\n    let mounted = true;\n\n    const getMovies = async () => {\n      // get movies\n      const subscriber = await db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").orderBy(\"timestamp\", \"desc\").get().then(querySnap => {\n        if (querySnap) {\n          querySnap.forEach(docSnap => {\n            movieDict[docSnap.id] = docSnap.data().rating;\n            movieIds.push(docSnap.id);\n          });\n\n          if (mounted) {\n            setMovieRatingsDict(movieDict);\n          }\n\n          ;\n        }\n\n        console.log(\"movieDict: \" + JSON.stringify(movieDict));\n        console.log(movieIds); // iterate through the movieIds array and retrieve movie data and append to movies array\n\n        if (movieIds.length) {\n          movieIds.map(movieId => {\n            axios.get(MOVIE_DETAIL_URL + movieId + \"?\" + new URLSearchParams({\n              api_key: API_KEY\n            })).then(resp => {\n              // console.log(resp);\n              movies.push(resp.data);\n              console.log(movies);\n            });\n          });\n\n          if (mounted) {\n            setMovieRatings(movies);\n          }\n\n          ;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      const sub = await db.collection(\"tv\").doc(auth.currentUser.uid).collection(\"reviews\").orderBy(\"timestamp\", \"desc\").get().then(querySnap => {\n        if (querySnap) {\n          querySnap.forEach(docSnap => {\n            // console.log(docSnap.data().rating);\n            showDict[docSnap.id] = docSnap.data().rating;\n            showIds.push(docSnap.id);\n          });\n\n          if (mounted) {\n            setShowRatingsDict(showDict);\n          }\n\n          ;\n        }\n\n        console.log(\"showDict: \" + JSON.stringify(showDict));\n        console.log(showIds); // iterate through the movieIds array and retrieve movie data and append to movies array\n\n        if (showIds.length) {\n          showIds.map(showId => {\n            axios.get(TV_DETAIL_URL + showId + \"?\" + new URLSearchParams({\n              api_key: API_KEY\n            })).then(resp => {\n              // console.log(resp);\n              shows.push(resp.data);\n              console.log(shows);\n            });\n          });\n\n          if (mounted) {\n            setTvRatings(shows);\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }; // const getTvShows = async () => {\n    //     // get tv shows\n    //     const sub = await db.collection(\"tv\").doc(auth.currentUser.uid).collection(\"reviews\").orderBy(\"timestamp\", \"desc\").get()\n    //     .then((querySnap) => {\n    //         if (querySnap) {\n    //             querySnap.forEach((docSnap) => {\n    //                 // console.log(docSnap.data().rating);\n    //                 showDict[docSnap.id] = docSnap.data().rating;\n    //                 showIds.push(docSnap.id);\n    //             });\n    //             setShowRatingsDict(showDict);\n    //         }\n    //         console.log(\"showDict: \" + JSON.stringify(showDict));\n    //         console.log(showIds);\n    //         // iterate through the movieIds array and retrieve movie data and append to movies array\n    //         if (showIds.length) {\n    //             showIds.map(showId => {\n    //                 axios.get(TV_DETAIL_URL + showId + \"?\" + new URLSearchParams({api_key: API_KEY}))\n    //                 .then(resp => {\n    //                     // console.log(resp);\n    //                     shows.push(resp.data);\n    //                     console.log(shows);\n    //                     setTvRatings(shows);\n    //                 })\n    //             })\n    //         }\n    //     }) \n    //     .catch(err => {console.log(err);})\n    // }\n\n\n    getMovies(); // getTvShows();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RatingsScreenContainer, {\n    children: [/*#__PURE__*/_jsxDEV(H3Tag, {\n      children: \"My Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RatingsContainer, {\n      id: \"ratignsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(MovieRatings, {\n        children: [/*#__PURE__*/_jsxDEV(H4Tag, {\n          children: \"Movie Ratings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TBody, {\n            children: movieRatings === null || movieRatings === void 0 ? void 0 : movieRatings.map(movie => /*#__PURE__*/_jsxDEV(TRow, {\n              onClick: () => navigate(\"/movie/\" + movie.id),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: movie.poster_path ? 'https://image.tmdb.org/t/p/original/' + movie.poster_path : img\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TDInfo, {\n                children: [/*#__PURE__*/_jsxDEV(H4Tag, {\n                  children: movie.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(RatingDiv, {\n                  children: [/*#__PURE__*/_jsxDEV(ReactStars, {\n                    value: movieRatingsDict[String(movie.id)],\n                    edit: false,\n                    count: 10,\n                    size: 15,\n                    isHalf: true,\n                    emptyIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"far fa-star\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 56\n                    }, this),\n                    halfIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-star-half-alt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 55\n                    }, this),\n                    fullIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-star\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 55\n                    }, this),\n                    activeColor: \"#98FB98\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(RatingNumberStrong, {\n                    children: movieRatingsDict[String(movie.id)]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this)]\n            }, movie.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TvRatings, {\n        children: [/*#__PURE__*/_jsxDEV(H4Tag, {\n          children: \"TV Show Ratings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TBody, {\n            children: tvRatings === null || tvRatings === void 0 ? void 0 : tvRatings.map(tvshow => /*#__PURE__*/_jsxDEV(TRow, {\n              onClick: () => navigate(\"/tv/\" + tvshow.id),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: tvshow.poster_path ? 'https://image.tmdb.org/t/p/original/' + tvshow.poster_path : img\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TDInfo, {\n                children: [/*#__PURE__*/_jsxDEV(H4Tag, {\n                  children: tvshow.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(RatingDiv, {\n                  children: [/*#__PURE__*/_jsxDEV(ReactStars // key={`stars_${rating}`}\n                  , {\n                    value: showRatingsDict[String(tvshow.id)],\n                    edit: false,\n                    count: 10,\n                    size: 15,\n                    isHalf: true,\n                    emptyIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"far fa-star\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 56\n                    }, this),\n                    halfIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-star-half-alt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 55\n                    }, this),\n                    fullIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-star\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 55\n                    }, this),\n                    activeColor: \"#98FB98\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(RatingNumberStrong, {\n                    children: showRatingsDict[String(tvshow.id)]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this)]\n            }, tvshow.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyRatings, \"v02yZdaCmYQBTTNIypol4TGKEOs=\", false, function () {\n  return [useNavigate];\n});\n\n_c14 = MyRatings;\nexport default MyRatings;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n\n$RefreshReg$(_c, \"RatingsScreenContainer\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"RatingsContainer\");\n$RefreshReg$(_c4, \"MovieRatings\");\n$RefreshReg$(_c5, \"TvRatings\");\n$RefreshReg$(_c6, \"Table\");\n$RefreshReg$(_c7, \"TBody\");\n$RefreshReg$(_c8, \"TRow\");\n$RefreshReg$(_c9, \"TDInfo\");\n$RefreshReg$(_c10, \"RatingDiv\");\n$RefreshReg$(_c11, \"H3Tag\");\n$RefreshReg$(_c12, \"H4Tag\");\n$RefreshReg$(_c13, \"RatingNumberStrong\");\n$RefreshReg$(_c14, \"MyRatings\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","styled","axios","img","ReactStars","useNavigate","RatingsScreenContainer","div","Image","RatingsContainer","MovieRatings","TvRatings","Table","table","TBody","tbody","TRow","tr","TDInfo","td","RatingDiv","H3Tag","h3","H4Tag","h4","RatingNumberStrong","strong","MyRatings","movieRatings","setMovieRatings","tvRatings","setTvRatings","movieRatingsDict","setMovieRatingsDict","showRatingsDict","setShowRatingsDict","navigate","API_KEY","TV_DETAIL_URL","MOVIE_DETAIL_URL","movieIds","movies","showIds","shows","movieDict","showDict","mounted","getMovies","subscriber","collection","doc","currentUser","uid","orderBy","get","then","querySnap","forEach","docSnap","id","data","rating","push","console","log","JSON","stringify","length","map","movieId","URLSearchParams","api_key","resp","catch","err","sub","showId","movie","poster_path","title","String","tvshow","name"],"sources":["/Users/andrewyusuf/movie-rating-sideproject/src/pages/MyRatings.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {db, auth} from \"../firebase\"\nimport styled from \"styled-components\"\nimport axios from 'axios'\nimport img from \"../NoMoviePoster.jpeg\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst RatingsScreenContainer = styled.div`\n    position: relative;\n    height: calc(100vh - 70px);\n    width: 100vw;\n    display: block;\n    text-align: center;\n    align-items: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    border-radius: 3px;\n    width: 75px; \n    height: 125px;\n`\n\nconst RatingsContainer = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    height: calc(100vh - 225px);\n`\n\nconst MovieRatings = styled.div`\n    width: 30%;\n    height: 67vh;\n    overflow: hidden;\n    // border: 1px solid #fff;\n    display: block;\n    border-radius: 1rem;\n    justify-content: center;\n    margin-left: 10em;\n    // background-color: #191414;\n    background-color: #111;\n\n`\n\nconst TvRatings = styled.div`\n    width: 30%;\n    height: 67vh;\n    display: block;\n    border-radius: 1rem;\n    margin-right: 10em;\n    justify-content: center;\n    background-color: #111;\n\n`\n\nconst Table = styled.table`\n    width: 85%;\n    padding: 10px;\n    // border: 1px solid #fff;\n    border-radius: 7px;\n    margin-left: auto;\n    margin-right: auto;\n    // background:rgba(1,1,1,0.5);\n    background-color: #343434;\n`\n\nconst TBody = styled.tbody`\n    display: block;\n    overflow-y: auto;\n    max-height: calc(65vh - 85px);\n`\n\nconst TRow = styled.tr`\n    display: flex;\n    margin: 5px;\n    align-items: center;\n\n    &:hover {\n        cursor: pointer;\n        background-color: lightgray;\n    }\n`\n\nconst TDInfo = styled.td`\n    display: block;\n    text-align: left;\n    padding: 10px;\n`\n\nconst RatingDiv = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst H3Tag = styled.h3`\n    margin-top: 2em;\n    font-size: 26px;\n`\n\nconst H4Tag = styled.h4`\n    margin-top: 1em;\n    font-size: 20px;\n    margin-bottom: 5px;\n    font-family: 'Dosis', sans-serif;\n`\n\nconst RatingNumberStrong = styled.strong`\n    margin-left: 7px;\n    margin-top: 4px;\n`\n\n\nconst MyRatings = () => {\n\n    const [movieRatings, setMovieRatings] = useState([]);\n    const [tvRatings, setTvRatings] = useState([]);\n    const [movieRatingsDict, setMovieRatingsDict] = useState({});\n    const [showRatingsDict, setShowRatingsDict] = useState({});\n\n    const navigate = useNavigate();\n\n    const API_KEY = \"9a637b178d3f0923dd00ef0550b24e90\";\n    const TV_DETAIL_URL = \"https://api.themoviedb.org/3/tv/\"; \n    const MOVIE_DETAIL_URL = \"https://api.themoviedb.org/3/movie/\"; \n    // + movieId + \n    //     \"?\" + new URLSearchParams({api_key: API_KEY});\n\n    \n\n    \n\n    useEffect(() => {\n        const movieIds = []\n        const movies = [];\n        const showIds = [];\n        const shows = [];\n        let movieDict = {};\n        let showDict = {};\n\n        let mounted = true;\n\n        const getMovies = async () => {\n            // get movies\n            const subscriber = await db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").orderBy(\"timestamp\", \"desc\").get()\n            .then((querySnap) => {\n                if (querySnap) {\n                    querySnap.forEach((docSnap) => {\n                        movieDict[docSnap.id] = docSnap.data().rating;\n                        movieIds.push(docSnap.id);\n                    });\n                    if (mounted) {setMovieRatingsDict(movieDict)};\n                }\n                console.log(\"movieDict: \" + JSON.stringify(movieDict));\n                console.log(movieIds);\n    \n                // iterate through the movieIds array and retrieve movie data and append to movies array\n                if (movieIds.length) {\n                    movieIds.map(movieId => {\n                        axios.get(MOVIE_DETAIL_URL + movieId + \"?\" + new URLSearchParams({api_key: API_KEY}))\n                        .then(resp => {\n                            // console.log(resp);\n                            movies.push(resp.data);\n                            console.log(movies);\n                        })\n                    })\n                    if (mounted) {setMovieRatings(movies)};\n\n                }\n            }) \n            .catch(err => {console.log(err);})\n\n            const sub = await db.collection(\"tv\").doc(auth.currentUser.uid).collection(\"reviews\").orderBy(\"timestamp\", \"desc\").get()\n            .then((querySnap) => {\n                if (querySnap) {\n                    querySnap.forEach((docSnap) => {\n                        // console.log(docSnap.data().rating);\n                        showDict[docSnap.id] = docSnap.data().rating;\n                        showIds.push(docSnap.id);\n                    });\n                    if (mounted) {setShowRatingsDict(showDict)};\n    \n                }\n                console.log(\"showDict: \" + JSON.stringify(showDict));\n                console.log(showIds);\n    \n                // iterate through the movieIds array and retrieve movie data and append to movies array\n                if (showIds.length) {\n                    showIds.map(showId => {\n                        axios.get(TV_DETAIL_URL + showId + \"?\" + new URLSearchParams({api_key: API_KEY}))\n                        .then(resp => {\n                            // console.log(resp);\n                            shows.push(resp.data);\n                            console.log(shows);\n                        })\n                    })\n                    if (mounted) {setTvRatings(shows);}\n\n                }\n            }) \n            .catch(err => {console.log(err);})\n        }\n\n        // const getTvShows = async () => {\n        //     // get tv shows\n        //     const sub = await db.collection(\"tv\").doc(auth.currentUser.uid).collection(\"reviews\").orderBy(\"timestamp\", \"desc\").get()\n        //     .then((querySnap) => {\n        //         if (querySnap) {\n        //             querySnap.forEach((docSnap) => {\n        //                 // console.log(docSnap.data().rating);\n        //                 showDict[docSnap.id] = docSnap.data().rating;\n        //                 showIds.push(docSnap.id);\n        //             });\n        //             setShowRatingsDict(showDict);\n    \n        //         }\n        //         console.log(\"showDict: \" + JSON.stringify(showDict));\n        //         console.log(showIds);\n    \n        //         // iterate through the movieIds array and retrieve movie data and append to movies array\n        //         if (showIds.length) {\n        //             showIds.map(showId => {\n        //                 axios.get(TV_DETAIL_URL + showId + \"?\" + new URLSearchParams({api_key: API_KEY}))\n        //                 .then(resp => {\n        //                     // console.log(resp);\n        //                     shows.push(resp.data);\n        //                     console.log(shows);\n        //                     setTvRatings(shows);\n        //                 })\n        //             })\n        //         }\n        //     }) \n        //     .catch(err => {console.log(err);})\n    \n        // }\n\n        getMovies();\n        // getTvShows();\n        \n        return () => {\n            mounted = false\n        }\n        \n\n        \n    }, [])\n\n\n  return (\n    <RatingsScreenContainer>\n        <H3Tag>My Ratings</H3Tag>\n        <RatingsContainer id='ratignsContainer'>\n            <MovieRatings>\n                <H4Tag>Movie Ratings</H4Tag>\n                <Table>\n                    <TBody>\n                        {movieRatings?.map(movie => (\n                            <TRow onClick={() => navigate(\"/movie/\" + movie.id)} key={movie.id}>\n                                <td>\n                                    <Image src={movie.poster_path ? 'https://image.tmdb.org/t/p/original/' + movie.poster_path : img}/>\n                                </td>\n                                <TDInfo>\n                                    <H4Tag>{movie.title}</H4Tag>\n                                    <RatingDiv>\n                                        <ReactStars\n                                            value={movieRatingsDict[String(movie.id)]}\n                                            edit={false}\n                                            count={10}\n                                            size={15}\n                                            isHalf={true}\n                                            emptyIcon={<i className=\"far fa-star\"></i>}\n                                            halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\n                                            fullIcon={<i className=\"fa fa-star\"></i>}\n                                            activeColor=\"#98FB98\"\n                                        />\n                                        <RatingNumberStrong>{movieRatingsDict[String(movie.id)]}</RatingNumberStrong>\n                                    </RatingDiv>\n                                    \n                                </TDInfo>\n                            </TRow>\n                        ))}\n                        \n\n                    </TBody>\n                </Table>\n            </MovieRatings>\n            <TvRatings>\n                <H4Tag>TV Show Ratings</H4Tag>\n                <Table>\n                    <TBody>\n                        {tvRatings?.map(tvshow => (\n                            <TRow onClick={() => navigate(\"/tv/\" + tvshow.id)} key={tvshow.id}>\n                                <td>\n                                    <Image src={tvshow.poster_path ? 'https://image.tmdb.org/t/p/original/' + tvshow.poster_path : img}/>\n                                </td>\n                                <TDInfo>\n                                    <H4Tag>{tvshow.name}</H4Tag>\n                                    <RatingDiv>\n                                        <ReactStars\n                                            // key={`stars_${rating}`}\n                                            value={showRatingsDict[String(tvshow.id)]}\n                                            edit={false}\n                                            count={10}\n                                            size={15}\n                                            isHalf={true}\n                                            emptyIcon={<i className=\"far fa-star\"></i>}\n                                            halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\n                                            fullIcon={<i className=\"fa fa-star\"></i>}\n                                            activeColor=\"#98FB98\"\n                                        />\n                                        <RatingNumberStrong>{showRatingsDict[String(tvshow.id)]}</RatingNumberStrong>\n                                    </RatingDiv>\n                                </TDInfo>\n                            </TRow>\n                        ))}\n                    </TBody>\n                </Table>\n\n\n            </TvRatings>\n        </RatingsContainer>\n        \n    </RatingsScreenContainer>\n  )\n}\n\nexport default MyRatings"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,EAAR,EAAYC,IAAZ,QAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAIA,MAAMC,sBAAsB,GAAGL,MAAM,CAACM,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,sB;AAUN,MAAME,KAAK,GAAGP,MAAM,CAACE,GAAI;AACzB;AACA;AACA;AACA,CAJA;MAAMK,K;AAMN,MAAMC,gBAAgB,GAAGR,MAAM,CAACM,GAAI;AACpC;AACA;AACA;AACA;AACA,CALA;MAAME,gB;AAON,MAAMC,YAAY,GAAGT,MAAM,CAACM,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMG,Y;AAcN,MAAMC,SAAS,GAAGV,MAAM,CAACM,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMI,S;AAWN,MAAMC,KAAK,GAAGX,MAAM,CAACY,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,K;AAWN,MAAME,KAAK,GAAGb,MAAM,CAACc,KAAM;AAC3B;AACA;AACA;AACA,CAJA;MAAMD,K;AAMN,MAAME,IAAI,GAAGf,MAAM,CAACgB,EAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,I;AAWN,MAAME,MAAM,GAAGjB,MAAM,CAACkB,EAAG;AACzB;AACA;AACA;AACA,CAJA;MAAMD,M;AAMN,MAAME,SAAS,GAAGnB,MAAM,CAACM,GAAI;AAC7B;AACA;AACA,CAHA;OAAMa,S;AAKN,MAAMC,KAAK,GAAGpB,MAAM,CAACqB,EAAG;AACxB;AACA;AACA,CAHA;OAAMD,K;AAKN,MAAME,KAAK,GAAGtB,MAAM,CAACuB,EAAG;AACxB;AACA;AACA;AACA;AACA,CALA;OAAMD,K;AAON,MAAME,kBAAkB,GAAGxB,MAAM,CAACyB,MAAO;AACzC;AACA;AACA,CAHA;OAAMD,kB;;AAMN,MAAME,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC/B,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACgC,SAAD,EAAYC,YAAZ,IAA4BjC,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACkC,gBAAD,EAAmBC,mBAAnB,IAA0CnC,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACoC,eAAD,EAAkBC,kBAAlB,IAAwCrC,QAAQ,CAAC,EAAD,CAAtD;EAEA,MAAMsC,QAAQ,GAAG/B,WAAW,EAA5B;EAEA,MAAMgC,OAAO,GAAG,kCAAhB;EACA,MAAMC,aAAa,GAAG,kCAAtB;EACA,MAAMC,gBAAgB,GAAG,qCAAzB,CAXoB,CAYpB;EACA;;EAMA1C,SAAS,CAAC,MAAM;IACZ,MAAM2C,QAAQ,GAAG,EAAjB;IACA,MAAMC,MAAM,GAAG,EAAf;IACA,MAAMC,OAAO,GAAG,EAAhB;IACA,MAAMC,KAAK,GAAG,EAAd;IACA,IAAIC,SAAS,GAAG,EAAhB;IACA,IAAIC,QAAQ,GAAG,EAAf;IAEA,IAAIC,OAAO,GAAG,IAAd;;IAEA,MAAMC,SAAS,GAAG,YAAY;MAC1B;MACA,MAAMC,UAAU,GAAG,MAAMjD,EAAE,CAACkD,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4BlD,IAAI,CAACmD,WAAL,CAAiBC,GAA7C,EAAkDH,UAAlD,CAA6D,SAA7D,EAAwEI,OAAxE,CAAgF,WAAhF,EAA6F,MAA7F,EAAqGC,GAArG,GACxBC,IADwB,CAClBC,SAAD,IAAe;QACjB,IAAIA,SAAJ,EAAe;UACXA,SAAS,CAACC,OAAV,CAAmBC,OAAD,IAAa;YAC3Bd,SAAS,CAACc,OAAO,CAACC,EAAT,CAAT,GAAwBD,OAAO,CAACE,IAAR,GAAeC,MAAvC;YACArB,QAAQ,CAACsB,IAAT,CAAcJ,OAAO,CAACC,EAAtB;UACH,CAHD;;UAIA,IAAIb,OAAJ,EAAa;YAACb,mBAAmB,CAACW,SAAD,CAAnB;UAA+B;;UAAA;QAChD;;QACDmB,OAAO,CAACC,GAAR,CAAY,gBAAgBC,IAAI,CAACC,SAAL,CAAetB,SAAf,CAA5B;QACAmB,OAAO,CAACC,GAAR,CAAYxB,QAAZ,EATiB,CAWjB;;QACA,IAAIA,QAAQ,CAAC2B,MAAb,EAAqB;UACjB3B,QAAQ,CAAC4B,GAAT,CAAaC,OAAO,IAAI;YACpBnE,KAAK,CAACoD,GAAN,CAAUf,gBAAgB,GAAG8B,OAAnB,GAA6B,GAA7B,GAAmC,IAAIC,eAAJ,CAAoB;cAACC,OAAO,EAAElC;YAAV,CAApB,CAA7C,EACCkB,IADD,CACMiB,IAAI,IAAI;cACV;cACA/B,MAAM,CAACqB,IAAP,CAAYU,IAAI,CAACZ,IAAjB;cACAG,OAAO,CAACC,GAAR,CAAYvB,MAAZ;YACH,CALD;UAMH,CAPD;;UAQA,IAAIK,OAAJ,EAAa;YAACjB,eAAe,CAACY,MAAD,CAAf;UAAwB;;UAAA;QAEzC;MACJ,CAzBwB,EA0BxBgC,KA1BwB,CA0BlBC,GAAG,IAAI;QAACX,OAAO,CAACC,GAAR,CAAYU,GAAZ;MAAkB,CA1BR,CAAzB;MA4BA,MAAMC,GAAG,GAAG,MAAM5E,EAAE,CAACkD,UAAH,CAAc,IAAd,EAAoBC,GAApB,CAAwBlD,IAAI,CAACmD,WAAL,CAAiBC,GAAzC,EAA8CH,UAA9C,CAAyD,SAAzD,EAAoEI,OAApE,CAA4E,WAA5E,EAAyF,MAAzF,EAAiGC,GAAjG,GACjBC,IADiB,CACXC,SAAD,IAAe;QACjB,IAAIA,SAAJ,EAAe;UACXA,SAAS,CAACC,OAAV,CAAmBC,OAAD,IAAa;YAC3B;YACAb,QAAQ,CAACa,OAAO,CAACC,EAAT,CAAR,GAAuBD,OAAO,CAACE,IAAR,GAAeC,MAAtC;YACAnB,OAAO,CAACoB,IAAR,CAAaJ,OAAO,CAACC,EAArB;UACH,CAJD;;UAKA,IAAIb,OAAJ,EAAa;YAACX,kBAAkB,CAACU,QAAD,CAAlB;UAA6B;;UAAA;QAE9C;;QACDkB,OAAO,CAACC,GAAR,CAAY,eAAeC,IAAI,CAACC,SAAL,CAAerB,QAAf,CAA3B;QACAkB,OAAO,CAACC,GAAR,CAAYtB,OAAZ,EAXiB,CAajB;;QACA,IAAIA,OAAO,CAACyB,MAAZ,EAAoB;UAChBzB,OAAO,CAAC0B,GAAR,CAAYQ,MAAM,IAAI;YAClB1E,KAAK,CAACoD,GAAN,CAAUhB,aAAa,GAAGsC,MAAhB,GAAyB,GAAzB,GAA+B,IAAIN,eAAJ,CAAoB;cAACC,OAAO,EAAElC;YAAV,CAApB,CAAzC,EACCkB,IADD,CACMiB,IAAI,IAAI;cACV;cACA7B,KAAK,CAACmB,IAAN,CAAWU,IAAI,CAACZ,IAAhB;cACAG,OAAO,CAACC,GAAR,CAAYrB,KAAZ;YACH,CALD;UAMH,CAPD;;UAQA,IAAIG,OAAJ,EAAa;YAACf,YAAY,CAACY,KAAD,CAAZ;UAAqB;QAEtC;MACJ,CA3BiB,EA4BjB8B,KA5BiB,CA4BXC,GAAG,IAAI;QAACX,OAAO,CAACC,GAAR,CAAYU,GAAZ;MAAkB,CA5Bf,CAAlB;IA6BH,CA3DD,CAVY,CAuEZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;;;IAEA3B,SAAS,GAxGG,CAyGZ;;IAEA,OAAO,MAAM;MACTD,OAAO,GAAG,KAAV;IACH,CAFD;EAMH,CAjHQ,EAiHN,EAjHM,CAAT;EAoHF,oBACE,QAAC,sBAAD;IAAA,wBACI,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,gBAAD;MAAkB,EAAE,EAAC,kBAArB;MAAA,wBACI,QAAC,YAAD;QAAA,wBACI,QAAC,KAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD;UAAA,uBACI,QAAC,KAAD;YAAA,UACKlB,YADL,aACKA,YADL,uBACKA,YAAY,CAAEwC,GAAd,CAAkBS,KAAK,iBACpB,QAAC,IAAD;cAAM,OAAO,EAAE,MAAMzC,QAAQ,CAAC,YAAYyC,KAAK,CAAClB,EAAnB,CAA7B;cAAA,wBACI;gBAAA,uBACI,QAAC,KAAD;kBAAO,GAAG,EAAEkB,KAAK,CAACC,WAAN,GAAoB,yCAAyCD,KAAK,CAACC,WAAnE,GAAiF3E;gBAA7F;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAII,QAAC,MAAD;gBAAA,wBACI,QAAC,KAAD;kBAAA,UAAQ0E,KAAK,CAACE;gBAAd;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAEI,QAAC,SAAD;kBAAA,wBACI,QAAC,UAAD;oBACI,KAAK,EAAE/C,gBAAgB,CAACgD,MAAM,CAACH,KAAK,CAAClB,EAAP,CAAP,CAD3B;oBAEI,IAAI,EAAE,KAFV;oBAGI,KAAK,EAAE,EAHX;oBAII,IAAI,EAAE,EAJV;oBAKI,MAAM,EAAE,IALZ;oBAMI,SAAS,eAAE;sBAAG,SAAS,EAAC;oBAAb;sBAAA;sBAAA;sBAAA;oBAAA,QANf;oBAOI,QAAQ,eAAE;sBAAG,SAAS,EAAC;oBAAb;sBAAA;sBAAA;sBAAA;oBAAA,QAPd;oBAQI,QAAQ,eAAE;sBAAG,SAAS,EAAC;oBAAb;sBAAA;sBAAA;sBAAA;oBAAA,QARd;oBASI,WAAW,EAAC;kBAThB;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAYI,QAAC,kBAAD;oBAAA,UAAqB3B,gBAAgB,CAACgD,MAAM,CAACH,KAAK,CAAClB,EAAP,CAAP;kBAArC;oBAAA;oBAAA;oBAAA;kBAAA,QAZJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA,GAA0DkB,KAAK,CAAClB,EAAhE;cAAA;cAAA;cAAA;YAAA,QADH;UADL;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAmCI,QAAC,SAAD;QAAA,wBACI,QAAC,KAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD;UAAA,uBACI,QAAC,KAAD;YAAA,UACK7B,SADL,aACKA,SADL,uBACKA,SAAS,CAAEsC,GAAX,CAAea,MAAM,iBAClB,QAAC,IAAD;cAAM,OAAO,EAAE,MAAM7C,QAAQ,CAAC,SAAS6C,MAAM,CAACtB,EAAjB,CAA7B;cAAA,wBACI;gBAAA,uBACI,QAAC,KAAD;kBAAO,GAAG,EAAEsB,MAAM,CAACH,WAAP,GAAqB,yCAAyCG,MAAM,CAACH,WAArE,GAAmF3E;gBAA/F;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAII,QAAC,MAAD;gBAAA,wBACI,QAAC,KAAD;kBAAA,UAAQ8E,MAAM,CAACC;gBAAf;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAEI,QAAC,SAAD;kBAAA,wBACI,QAAC,UAAD,CACI;kBADJ;oBAEI,KAAK,EAAEhD,eAAe,CAAC8C,MAAM,CAACC,MAAM,CAACtB,EAAR,CAAP,CAF1B;oBAGI,IAAI,EAAE,KAHV;oBAII,KAAK,EAAE,EAJX;oBAKI,IAAI,EAAE,EALV;oBAMI,MAAM,EAAE,IANZ;oBAOI,SAAS,eAAE;sBAAG,SAAS,EAAC;oBAAb;sBAAA;sBAAA;sBAAA;oBAAA,QAPf;oBAQI,QAAQ,eAAE;sBAAG,SAAS,EAAC;oBAAb;sBAAA;sBAAA;sBAAA;oBAAA,QARd;oBASI,QAAQ,eAAE;sBAAG,SAAS,EAAC;oBAAb;sBAAA;sBAAA;sBAAA;oBAAA,QATd;oBAUI,WAAW,EAAC;kBAVhB;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAaI,QAAC,kBAAD;oBAAA,UAAqBzB,eAAe,CAAC8C,MAAM,CAACC,MAAM,CAACtB,EAAR,CAAP;kBAApC;oBAAA;oBAAA;oBAAA;kBAAA,QAbJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA,GAAwDsB,MAAM,CAACtB,EAA/D;cAAA;cAAA;cAAA;YAAA,QADH;UADL;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAnCJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4ED,CAnND;;GAAMhC,S;UAOetB,W;;;OAPfsB,S;AAqNN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}