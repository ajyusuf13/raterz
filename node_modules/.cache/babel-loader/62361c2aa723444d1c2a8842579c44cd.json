{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyusuf/movie-rating-sideproject/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { db, auth, storage } from '../firebase';\nimport styled from \"styled-components\";\nimport User from '../components/User';\nimport Moment from \"react-moment\";\nimport { query, onSnapshot, orderBy, collection, getDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 3fr 1fr;\n    overflow: hidden;\n    height: calc(100vh - 70px);\n    width: 100vw;\n`;\n_c = HomeContainer;\nconst UserContainer = styled.div`\n    border-right: 2px solid #000000;\n    overflow-y: auto;\n`;\n_c2 = UserContainer;\nconst FeedContainter = styled.div`\n    position: relative;\n    // background-color: #F0F8FF;\n    background-color: #E6E6FA;\n    overflow-y: auto;\n    width: 100%;\n`;\n_c3 = FeedContainter;\nconst PostDiv = styled.div`\n    margin: 5%;\n    background-color: white;\n    padding: 10px;\n    border-radius: 7px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.4);\n    display: flex;\n    gap: 7px;\n\n`;\n_c4 = PostDiv;\nconst PicDiv = styled.div`\n`;\n_c5 = PicDiv;\nconst ProfilePic = styled.img`\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n`;\n_c6 = ProfilePic;\nconst PostContentDiv = styled.div`\n    display: block;\n`;\n_c7 = PostContentDiv;\nconst NameandTimePosted = styled.div`\n`;\n_c8 = NameandTimePosted;\nconst MediaImage = styled.img`\n    width: 100px;\n    height: 150px;\n`;\n_c9 = MediaImage;\nconst StyledH3 = styled.h3`\n    margin: 0;\n    padding: 10px;\n    text-align: center;\n    font-family: 'Dosis', sans-serif;\n    color: black;\n`;\n_c10 = StyledH3;\nconst PostedByName = styled.h4`\n    color: black;\n    margin-top: 8px;\n    margin-bottom: 2px;\n`;\n_c11 = PostedByName;\nmomentStyles = {\n  color: \"grey\",\n  fontStyle: \"italic\"\n};\nexport const Home = () => {\n  _s();\n\n  var _auth$currentUser;\n\n  const [users, setUsers] = useState([]);\n  const [chat, setChat] = useState(\"\"); // this will hold the user that is being chatted with\n\n  const [messages, setMessages] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const user1 = (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid;\n  useEffect(() => {\n    if (auth.currentUser) {\n      var _auth$currentUser2;\n\n      const usersRef = db.collection(\"users\"); // create query obj\n\n      usersRef.where('uid', 'not-in', [(_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.uid]).get().then(querySnapshot => {\n        let users = [];\n        querySnapshot.forEach(doc => {\n          users.push(doc.data());\n        });\n        setUsers(users);\n      });\n    } // get posts\n\n\n    const getPosts = async () => {\n      const postsFirebase = []; //check later what would happen if there were no posts\n\n      db.collectionGroup(\"post\").orderBy(\"createdAt\", \"desc\").get().then(querySnapshot => {\n        //console.log(querySnapshot.docs);\n        if (querySnapshot.docs.length) {\n          querySnapshot.docs.map(docSnap => {\n            console.log(docSnap.data());\n            postsFirebase.push(docSnap.data());\n          });\n          setPosts(postsFirebase);\n        }\n      });\n    };\n\n    getPosts();\n  }, []);\n\n  const selectUser = async user => {\n    setChat(user);\n    const user2 = user.uid;\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    const messagesRef = collection(db, \"messages\", id, \"chat\");\n    const q = query(messagesRef, orderBy(\"createdAt\", \"asc\"));\n    onSnapshot(q, querySnapshot => {\n      let msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push(doc.data());\n      });\n      setMessages(msgs);\n    }); // get last message between the loggen in user and the selected user\n\n    const docSnap = await getDoc(doc(db, \"lastMessage\", id)); // checking to see if the last message exists\n\n    if (docSnap.data() && docSnap.data().from !== user1) {\n      updateDoc(doc(db, \"lastMessage\", id), {\n        unread: false\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(HomeContainer, {\n    children: [/*#__PURE__*/_jsxDEV(UserContainer, {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        user: user,\n        selectUser: selectUser,\n        chat: chat\n      }, user.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FeedContainter, {\n      children: [/*#__PURE__*/_jsxDEV(StyledH3, {\n        children: \"Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), posts.map((post, i) => /*#__PURE__*/_jsxDEV(PostDiv, {\n        children: [/*#__PURE__*/_jsxDEV(PicDiv, {\n          children: /*#__PURE__*/_jsxDEV(ProfilePic, {\n            src: post.photoURL,\n            alt: \"No Profile Pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostContentDiv, {\n          children: [/*#__PURE__*/_jsxDEV(NameandTimePosted, {\n            children: [/*#__PURE__*/_jsxDEV(PostedByName, {\n              children: post.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Moment, {\n              style: momentStyles,\n              fromNow: true,\n              children: post.createdAt.toDate()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MediaImage, {\n            src: post.mediaPoster,\n            alt: \"No Poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this))]\n    }, \"feed\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"unO0ejQYlA8MadnVX/cnV0fIgsI=\");\n\n_c12 = Home;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"HomeContainer\");\n$RefreshReg$(_c2, \"UserContainer\");\n$RefreshReg$(_c3, \"FeedContainter\");\n$RefreshReg$(_c4, \"PostDiv\");\n$RefreshReg$(_c5, \"PicDiv\");\n$RefreshReg$(_c6, \"ProfilePic\");\n$RefreshReg$(_c7, \"PostContentDiv\");\n$RefreshReg$(_c8, \"NameandTimePosted\");\n$RefreshReg$(_c9, \"MediaImage\");\n$RefreshReg$(_c10, \"StyledH3\");\n$RefreshReg$(_c11, \"PostedByName\");\n$RefreshReg$(_c12, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","storage","styled","User","Moment","query","onSnapshot","orderBy","collection","getDoc","updateDoc","doc","HomeContainer","div","UserContainer","FeedContainter","PostDiv","PicDiv","ProfilePic","img","PostContentDiv","NameandTimePosted","MediaImage","StyledH3","h3","PostedByName","h4","momentStyles","color","fontStyle","Home","users","setUsers","chat","setChat","messages","setMessages","posts","setPosts","user1","currentUser","uid","usersRef","where","get","then","querySnapshot","forEach","push","data","getPosts","postsFirebase","collectionGroup","docs","length","map","docSnap","console","log","selectUser","user","user2","id","messagesRef","q","msgs","from","unread","post","i","photoURL","name","createdAt","toDate","mediaPoster"],"sources":["/Users/andrewyusuf/movie-rating-sideproject/src/pages/Home.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {db, auth, storage} from '../firebase'\nimport styled from \"styled-components\"\nimport User from '../components/User';\nimport Moment from \"react-moment\"\nimport {query, onSnapshot, orderBy, collection, getDoc, updateDoc, doc} from \"firebase/firestore\"\n\n\nconst HomeContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 3fr 1fr;\n    overflow: hidden;\n    height: calc(100vh - 70px);\n    width: 100vw;\n`\n\nconst UserContainer = styled.div`\n    border-right: 2px solid #000000;\n    overflow-y: auto;\n`\n\nconst FeedContainter = styled.div`\n    position: relative;\n    // background-color: #F0F8FF;\n    background-color: #E6E6FA;\n    overflow-y: auto;\n    width: 100%;\n`\n\nconst PostDiv = styled.div`\n    margin: 5%;\n    background-color: white;\n    padding: 10px;\n    border-radius: 7px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.4);\n    display: flex;\n    gap: 7px;\n\n`\nconst PicDiv = styled.div`\n`\n\nconst ProfilePic = styled.img`\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n`\nconst PostContentDiv = styled.div`\n    display: block;\n`\n\nconst NameandTimePosted = styled.div`\n`\n\n\n\nconst MediaImage = styled.img`\n    width: 100px;\n    height: 150px;\n`\n\nconst StyledH3 = styled.h3`\n    margin: 0;\n    padding: 10px;\n    text-align: center;\n    font-family: 'Dosis', sans-serif;\n    color: black;\n`\n\nconst PostedByName = styled.h4`\n    color: black;\n    margin-top: 8px;\n    margin-bottom: 2px;\n`\n\nmomentStyles = {\n    color: \"grey\",\n    fontStyle: \"italic\"\n}\n\nexport const Home = () => {\n\n    const [users, setUsers] = useState([]);\n    const [chat, setChat] = useState(\"\");   // this will hold the user that is being chatted with\n    const [messages, setMessages] = useState([]);\n    const [posts, setPosts] = useState([]);\n    const user1 = auth.currentUser?.uid;\n\n    useEffect(()=>{\n        if (auth.currentUser) {\n            const usersRef = db.collection(\"users\");\n            // create query obj\n            usersRef.where('uid', 'not-in', [auth.currentUser?.uid]).get().then((querySnapshot) => {\n                let users = []\n                querySnapshot.forEach(doc => {\n                    users.push(doc.data())\n                });\n                setUsers(users);\n            })\n        }\n\n        // get posts\n        const getPosts = async () => {\n            const postsFirebase = [];\n            //check later what would happen if there were no posts\n            db.collectionGroup(\"post\").orderBy(\"createdAt\", \"desc\").get()\n            .then(querySnapshot => {\n                //console.log(querySnapshot.docs);\n                if (querySnapshot.docs.length) {\n                    querySnapshot.docs.map(docSnap => {\n                        console.log(docSnap.data());\n                        postsFirebase.push(docSnap.data());\n                    })\n                    setPosts(postsFirebase);\n                }\n            })\n        }\n        getPosts();\n\n    }, [])\n\n    const selectUser = async (user) => {\n        setChat(user);\n\n        const user2 = user.uid;\n        const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n\n        const messagesRef = collection(db, \"messages\", id, \"chat\");\n        const q = query(messagesRef, orderBy(\"createdAt\", \"asc\"));\n        onSnapshot(q, querySnapshot => {\n            let msgs = [];\n            querySnapshot.forEach(doc => {\n                msgs.push(doc.data());\n            })\n            setMessages(msgs);\n        })\n\n        // get last message between the loggen in user and the selected user\n        const docSnap = await getDoc(doc(db, \"lastMessage\", id));\n        // checking to see if the last message exists\n        if (docSnap.data() && docSnap.data().from !== user1) {\n            updateDoc(doc(db, \"lastMessage\", id), {\n                unread : false\n            })\n        }\n    }       \n\n  return (\n    <HomeContainer>\n        <UserContainer>\n            {users.map(user => <User key={user.uid} user={user} selectUser={selectUser} chat={chat}/>\n            )}\n        </UserContainer>\n        <FeedContainter key=\"feed\">\n            <StyledH3>Feed</StyledH3>\n            {posts.map((post, i) => (\n                <PostDiv key={i}>\n                    <PicDiv>\n                        <ProfilePic src={post.photoURL} alt='No Profile Pic'/>\n                    </PicDiv>\n                    <PostContentDiv>\n                        <NameandTimePosted>\n                            <PostedByName>{post.name}</PostedByName>\n                            <Moment style={momentStyles}fromNow>{post.createdAt.toDate()}</Moment>\n                        </NameandTimePosted>\n\n                        <MediaImage src={post.mediaPoster} alt=\"No Poster\"/>\n                    </PostContentDiv>\n                </PostDiv>\n            ))}\n\n        </FeedContainter>\n    </HomeContainer>\n    \n  )\n}\n\n\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}