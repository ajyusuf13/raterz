{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyusuf/movie-rating-sideproject/src/pages/TvDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport img from \"../NoMoviePoster.jpeg\";\nimport { db, auth } from \"../firebase\";\nimport { serverTimestamp } from 'firebase/firestore';\nimport ReactStars from \"react-rating-stars-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TvDetailContainer = styled.div`\n    position: relative;\n    height: calc(100vh - 70px);\n    justify-content: center;\n    align-items: center;\n    display: flex;\n`;\n_c = TvDetailContainer;\nconst TvDetailBackgroundDiv = styled.div`\n    width: 95vw;\n    height: 100%;\n    background-size: cover;\n`;\n_c2 = TvDetailBackgroundDiv;\nconst TvDetailBlurDiv = styled.div`\n    width: 95vw;\n    height: 100%;\n    backdrop-filter: blur(0px) grayscale(0%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n_c3 = TvDetailBlurDiv;\nconst TvDetailInfoDiv = styled.div`\n    width: 80%;\n    height: 70%;\n    display: grid;\n    grid-template-columns: 2fr 4fr;\n    border: 2px solid #000;\n    background:rgba(1,1,1,0.75);    // grey transparent background\n`;\n_c4 = TvDetailInfoDiv;\nconst TvPosterandInfoDiv = styled.div`\n    // border: 1px solid #fff;\n    padding: 10px;\n    display: block;\n    text-align: center;\n    overflow: hidden;\n`;\n_c5 = TvPosterandInfoDiv;\nconst TvPosterImg = styled.img`\n    width: 275px;\n    height: 375px;\n    margin-top: 30px;\n`;\n_c6 = TvPosterImg;\nconst TvInformation = styled.div`\n    display: block;\n    overflow: auto;\n    padding: 10px;\n    // border: 1px solid #fff;\n`;\n_c7 = TvInformation;\nconst RatingDiv = styled.div`\n    display: flex;\n`;\n_c8 = RatingDiv;\nconst TextareaDiv = styled.div`\n    display: block;\n    margin-top: 1em;\n`;\n_c9 = TextareaDiv;\nconst TextareaTvReview = styled.textarea`\n    width: 90%;\n    height: 22vh;\n    padding: 10px;\n    border-radius: 7px;\n    font-family: 'Cabin', sans-serif;\n    font-size: 18px;\n    background:rgba(1,1,1,0.8);     \n    // color: black;\n    color: white;\n    \n    &:focus {\n        outline: none;\n    }\n`;\nconst ButtonGroupDiv = styled.div`\n    width: 90%;\n    padding: 10px;\n    display: flex;\n    justify-content: right;\n`;\n_c10 = ButtonGroupDiv;\nconst Button = styled.button`\n    padding: 0;\n    border-radius: 7px;\n    width: 60px;\n    height: 25px;\n    border: none;\n    margin-right: 8px;\n    transition: all 0.2s ease;\n    color: black;\n    font-family: 'Dosis', sans-serif;\n\n    &:hover {\n        transform: scale(1.05);\n        cursor: pointer;\n    }\n\n    &.save {\n        background-color: #00FA9A;\n\n    }\n\n    &.clear {\n        background-color: #C0C0C0;\n\n    }\n`;\n_c11 = Button;\nconst H2RatingNumber = styled.h2`\n    margin: 12px 0 10px 10px;\n\n    &.ratingString {\n        margin: 16px 0 10px 10px;\n        font-size: 16px;\n    }\n`;\n_c12 = H2RatingNumber;\nconst H3Tag = styled.h3`\n    font-family: 'Fredoka One', cursive;\n    font-size: 34px;\n    margin-bottom: 20px;\n`;\n_c13 = H3Tag;\nconst H4Tag = styled.h4`\n    font-style: italic;\n    color: white;\n`;\n_c14 = H4Tag;\n\nconst DisplayTvDetail = _ref => {\n  let {\n    TvDetail,\n    review,\n    setReview,\n    rating,\n    setRating\n  } = _ref;\n  const image = TvDetail.poster_path ? 'https://image.tmdb.org/t/p/original/' + TvDetail.poster_path : img;\n  const backgroundImage = TvDetail.backdrop_path ? 'https://image.tmdb.org/t/p/original/' + TvDetail.backdrop_path : \"\";\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TvDetailBackgroundDiv, {\n      style: {\n        backgroundImage: `url(${backgroundImage})`\n      },\n      children: /*#__PURE__*/_jsxDEV(TvDetailBlurDiv, {\n        children: /*#__PURE__*/_jsxDEV(TvDetailInfoDiv, {\n          children: [/*#__PURE__*/_jsxDEV(TvPosterandInfoDiv, {\n            children: [/*#__PURE__*/_jsxDEV(TvPosterImg, {\n              style: {},\n              src: image,\n              alt: \"No TV Poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), TvDetail.release_date ? /*#__PURE__*/_jsxDEV(H4Tag, {\n              children: moment(movieDetail.release_date, \"Y-M-D\").format(\"MMMM D, Y\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 53\n            }, this) : null, TvDetail.tagline ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: TvDetail.tagline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 49\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TvInformation, {\n            children: [/*#__PURE__*/_jsxDEV(H3Tag, {\n              children: TvDetail.original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), TvDetail.genres.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontStyle: 'italic',\n                marginBottom: '5px',\n                color: 'red'\n              },\n              children: TvDetail.genres.map(genre => {\n                return genre.name;\n              }).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this) : null, TvDetail.overview ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: TvDetail.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 50\n            }, this) : null, /*#__PURE__*/_jsxDEV(RatingDiv, {\n              children: [/*#__PURE__*/_jsxDEV(ReactStars, {\n                value: Math.max(0, rating),\n                count: 10,\n                onChange: ratingChanged,\n                size: 30,\n                isHalf: true,\n                emptyIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 44\n                }, this),\n                halfIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-star-half-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 43\n                }, this),\n                fullIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 43\n                }, this),\n                activeColor: \"#98FB98\"\n              }, `stars_${rating}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), rating ? /*#__PURE__*/_jsxDEV(H2RatingNumber, {\n                children: rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 43\n              }, this) : /*#__PURE__*/_jsxDEV(H2RatingNumber, {\n                className: \"ratingString\",\n                children: \"No Rating Yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextareaDiv, {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  margin: '0 0 5px 0'\n                },\n                children: \"Review: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextareaMovieReview // {...register(\"review\")}\n              , {\n                spellCheck: \"false\",\n                id: \"textAreaReview\",\n                placeholder: 'This movie sucks...? or?',\n                type: \"text\",\n                value: review,\n                onChange: e => setReview(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroupDiv, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"clear\",\n                  onClick: handleSubmit(clearReview),\n                  children: \"clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"save\",\n                  onClick: handleSubmit(saveReview),\n                  children: \"save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_c15 = DisplayTvDetail;\n\nconst TvDetail = () => {\n  _s();\n\n  const TvId = useParams().id;\n  const API_KEY = \"9a637b178d3f0923dd00ef0550b24e90\";\n  const [TvDetail, setTvDetail] = useState();\n  const [rating, setRating] = useState(0);\n  const [review, setReview] = useState(\"\");\n  const TV_DETAIL_URL = \"https://api.themoviedb.org/3/tv/\" + TvId + \"?\" + new URLSearchParams({\n    api_key: API_KEY\n  });\n\n  const ratingChanged = newRating => {\n    console.log(newRating);\n    setRating(newRating);\n    db.collection(\"tv\").doc(auth.currentUser.uid).collection(\"reviews\").doc(TvId).set({\n      rating: newRating\n    }, {\n      merge: true\n    });\n  };\n\n  const clearReview = () => {\n    console.log(\"clearing review\");\n    setReview(\"\");\n    console.log(review);\n    setRating(0);\n    document.getElementById(\"textAreaReview\").value = \"\";\n    console.log(\"text area should be empty\");\n    db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(TvId).delete();\n  };\n\n  const saveReview = () => {\n    if (review) {\n      db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(TvId).set({\n        review: review,\n        timestamp: serverTimestamp()\n      }, {\n        merge: true\n      });\n      alert(\"review has been saved\");\n    }\n  };\n\n  useEffect(() => {\n    axios.get(TV_DETAIL_URL).then(resp => {\n      console.log(resp.data);\n      setTvDetail(resp.data);\n    });\n    db.collection(\"tv\").doc(auth.currentUser.uid).collection(\"reviews\").doc(TvId).get().then(docSnap => {\n      const reviewDB = docSnap.get(\"review\");\n\n      if (reviewDB === undefined) {\n        console.log(\"There was no saved review\");\n      } else {\n        // put the post in the text area but check if it's undefined\n        setReview(reviewDB);\n        console.log(\"There was a saved review: \" + reviewDB); // check if there is a rating\n\n        const tvRating = docSnap.get(\"rating\");\n        console.log(\"tvRating rating\", JSON.stringify(tvRating));\n        setRating(tvRating ? tvRating : 0);\n      }\n    }).catch(err => {\n      console.log(err);\n      console.log(\"error trying to get document from firestore\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TvDetailContainer, {\n    children: TvDetail ? /*#__PURE__*/_jsxDEV(DisplayTvDetail, {\n      TvDetail: TvDetail,\n      review: review,\n      setReview: setReview,\n      rating: rating,\n      ratingChanged: ratingChanged,\n      clearReview: clearReview,\n      saveReview: saveReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Movie Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TvDetail, \"8fd/3AuA82VdcwHCwGMYa68q3hM=\", false, function () {\n  return [useParams];\n});\n\n_c16 = TvDetail;\nexport default TvDetail;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n\n$RefreshReg$(_c, \"TvDetailContainer\");\n$RefreshReg$(_c2, \"TvDetailBackgroundDiv\");\n$RefreshReg$(_c3, \"TvDetailBlurDiv\");\n$RefreshReg$(_c4, \"TvDetailInfoDiv\");\n$RefreshReg$(_c5, \"TvPosterandInfoDiv\");\n$RefreshReg$(_c6, \"TvPosterImg\");\n$RefreshReg$(_c7, \"TvInformation\");\n$RefreshReg$(_c8, \"RatingDiv\");\n$RefreshReg$(_c9, \"TextareaDiv\");\n$RefreshReg$(_c10, \"ButtonGroupDiv\");\n$RefreshReg$(_c11, \"Button\");\n$RefreshReg$(_c12, \"H2RatingNumber\");\n$RefreshReg$(_c13, \"H3Tag\");\n$RefreshReg$(_c14, \"H4Tag\");\n$RefreshReg$(_c15, \"DisplayTvDetail\");\n$RefreshReg$(_c16, \"TvDetail\");","map":{"version":3,"names":["React","useEffect","useState","moment","axios","useParams","styled","img","db","auth","serverTimestamp","ReactStars","TvDetailContainer","div","TvDetailBackgroundDiv","TvDetailBlurDiv","TvDetailInfoDiv","TvPosterandInfoDiv","TvPosterImg","TvInformation","RatingDiv","TextareaDiv","TextareaTvReview","textarea","ButtonGroupDiv","Button","button","H2RatingNumber","h2","H3Tag","h3","H4Tag","h4","DisplayTvDetail","TvDetail","review","setReview","rating","setRating","image","poster_path","backgroundImage","backdrop_path","release_date","movieDetail","format","tagline","original_title","genres","length","fontStyle","marginBottom","color","map","genre","name","join","overview","Math","max","ratingChanged","margin","e","target","value","handleSubmit","clearReview","saveReview","TvId","id","API_KEY","setTvDetail","TV_DETAIL_URL","URLSearchParams","api_key","newRating","console","log","collection","doc","currentUser","uid","set","merge","document","getElementById","delete","timestamp","alert","get","then","resp","data","docSnap","reviewDB","undefined","tvRating","JSON","stringify","catch","err"],"sources":["/Users/andrewyusuf/movie-rating-sideproject/src/pages/TvDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport moment from 'moment';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport img from \"../NoMoviePoster.jpeg\";\nimport {db, auth} from \"../firebase\"\nimport { serverTimestamp } from 'firebase/firestore';\nimport ReactStars from \"react-rating-stars-component\";\n\n\n\nconst TvDetailContainer = styled.div`\n    position: relative;\n    height: calc(100vh - 70px);\n    justify-content: center;\n    align-items: center;\n    display: flex;\n`\n\nconst TvDetailBackgroundDiv = styled.div`\n    width: 95vw;\n    height: 100%;\n    background-size: cover;\n`\n\nconst TvDetailBlurDiv = styled.div `\n    width: 95vw;\n    height: 100%;\n    backdrop-filter: blur(0px) grayscale(0%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst TvDetailInfoDiv = styled.div`\n    width: 80%;\n    height: 70%;\n    display: grid;\n    grid-template-columns: 2fr 4fr;\n    border: 2px solid #000;\n    background:rgba(1,1,1,0.75);    // grey transparent background\n`\nconst TvPosterandInfoDiv = styled.div`\n    // border: 1px solid #fff;\n    padding: 10px;\n    display: block;\n    text-align: center;\n    overflow: hidden;\n`\n\nconst TvPosterImg = styled.img`\n    width: 275px;\n    height: 375px;\n    margin-top: 30px;\n`\n\nconst TvInformation = styled.div`\n    display: block;\n    overflow: auto;\n    padding: 10px;\n    // border: 1px solid #fff;\n`\nconst RatingDiv = styled.div`\n    display: flex;\n`\nconst TextareaDiv = styled.div`\n    display: block;\n    margin-top: 1em;\n`\nconst TextareaTvReview = styled.textarea`\n    width: 90%;\n    height: 22vh;\n    padding: 10px;\n    border-radius: 7px;\n    font-family: 'Cabin', sans-serif;\n    font-size: 18px;\n    background:rgba(1,1,1,0.8);     \n    // color: black;\n    color: white;\n    \n    &:focus {\n        outline: none;\n    }\n`\n\nconst ButtonGroupDiv = styled.div`\n    width: 90%;\n    padding: 10px;\n    display: flex;\n    justify-content: right;\n`\n\nconst Button = styled.button`\n    padding: 0;\n    border-radius: 7px;\n    width: 60px;\n    height: 25px;\n    border: none;\n    margin-right: 8px;\n    transition: all 0.2s ease;\n    color: black;\n    font-family: 'Dosis', sans-serif;\n\n    &:hover {\n        transform: scale(1.05);\n        cursor: pointer;\n    }\n\n    &.save {\n        background-color: #00FA9A;\n\n    }\n\n    &.clear {\n        background-color: #C0C0C0;\n\n    }\n`\n\nconst H2RatingNumber = styled.h2`\n    margin: 12px 0 10px 10px;\n\n    &.ratingString {\n        margin: 16px 0 10px 10px;\n        font-size: 16px;\n    }\n`\n\nconst H3Tag = styled.h3`\n    font-family: 'Fredoka One', cursive;\n    font-size: 34px;\n    margin-bottom: 20px;\n`\n\nconst H4Tag = styled.h4`\n    font-style: italic;\n    color: white;\n`\n\nconst DisplayTvDetail = ({TvDetail, review, setReview, rating, setRating}) => {\n    const image = TvDetail.poster_path ? 'https://image.tmdb.org/t/p/original/' + TvDetail.poster_path : img;\n    const backgroundImage =  TvDetail.backdrop_path ? 'https://image.tmdb.org/t/p/original/' + TvDetail.backdrop_path : \"\";\n\n    return (\n        <React.Fragment>\n            <TvDetailBackgroundDiv style={{backgroundImage: `url(${backgroundImage})`}}>\n                <TvDetailBlurDiv>\n                    <TvDetailInfoDiv>\n                        <TvPosterandInfoDiv>\n                            <TvPosterImg style={{}} src={image} alt=\"No TV Poster\"/>\n                            {TvDetail.release_date? <H4Tag>{moment(movieDetail.release_date, \"Y-M-D\").format(\"MMMM D, Y\")}</H4Tag> : null}\n                            {TvDetail.tagline ? <p>{TvDetail.tagline}</p> : null}\n                        </TvPosterandInfoDiv>\n                        <TvInformation>\n                            <H3Tag>{TvDetail.original_title}</H3Tag>\n                            {TvDetail.genres.length ? (\n                            <p style={{fontStyle: 'italic', marginBottom: '5px', color: 'red'}}>\n                                {TvDetail.genres.map(genre => {return genre.name}).join(\", \")}\n                            </p>\n                            ) : null}\n                            {TvDetail.overview ? <p>{TvDetail.overview}</p> : null}\n                            <RatingDiv>\n                                <ReactStars\n                                key={`stars_${rating}`}\n                                value={Math.max(0, rating)}\n                                count={10}\n                                onChange={ratingChanged}\n                                size={30}\n                                isHalf={true}\n                                emptyIcon={<i className=\"far fa-star\"></i>}\n                                halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\n                                fullIcon={<i className=\"fa fa-star\"></i>}\n                                activeColor=\"#98FB98\"\n                                />\n                                {rating ? <H2RatingNumber>{rating}</H2RatingNumber> : <H2RatingNumber className='ratingString'>No Rating Yet</H2RatingNumber>}\n                            </RatingDiv>\n                            <TextareaDiv>\n                                <h5 style={{margin: '0 0 5px 0'}}>Review: </h5>\n                                <TextareaMovieReview \n                                    // {...register(\"review\")}\n                                    spellCheck=\"false\"\n                                    id=\"textAreaReview\"\n                                    placeholder={'This movie sucks...? or?'}\n                                    type=\"text\"\n                                    value={review}\n                                    onChange={(e) => setReview(e.target.value)}\n                                ></TextareaMovieReview>\n                                <ButtonGroupDiv>\n                                    <Button className='clear' onClick={handleSubmit(clearReview)}>clear</Button>\n                                    <Button className='save' onClick={handleSubmit(saveReview)}>save</Button>\n                                </ButtonGroupDiv>\n                            </TextareaDiv>\n                            \n                        </TvInformation>\n                \n                    </TvDetailInfoDiv>\n                </TvDetailBlurDiv>\n            </TvDetailBackgroundDiv>\n        </React.Fragment>\n    )\n\n\n}\n\n    \nconst TvDetail = () => {\n\n    const TvId = useParams().id;\n    const API_KEY = \"9a637b178d3f0923dd00ef0550b24e90\";\n    const [TvDetail, setTvDetail] = useState();\n    const [rating, setRating] = useState(0);\n    const [review, setReview] = useState(\"\");\n\n    const TV_DETAIL_URL = \"https://api.themoviedb.org/3/tv/\" + TvId + \n        \"?\" + new URLSearchParams({api_key: API_KEY});\n\n\n    const ratingChanged = (newRating) => {\n        console.log(newRating);\n        setRating(newRating);\n        db.collection(\"tv\").doc(auth.currentUser.uid).collection(\"reviews\").doc(TvId)\n            .set(\n            {rating : newRating},\n            {merge : true})\n    };\n\n    const clearReview = () => {\n        console.log(\"clearing review\");\n        setReview(\"\");\n        console.log(review);\n        setRating(0);\n        document.getElementById(\"textAreaReview\").value = \"\";\n        \n        console.log(\"text area should be empty\");\n        db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(TvId)\n            .delete();\n    }\n\n    const saveReview = () => {\n        if (review) {\n            db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(TvId)\n            .set(\n            {   review : review,\n                timestamp : serverTimestamp()\n            },\n            {merge: true});\n            alert(\"review has been saved\");\n        }\n    }\n\n    useEffect(() => {\n        axios.get(TV_DETAIL_URL)\n        .then(resp => {\n            console.log(resp.data);\n            setTvDetail(resp.data);\n        })\n\n        db.collection(\"tv\").doc(auth.currentUser.uid).collection(\"reviews\").doc(TvId).get()\n            .then((docSnap) => {\n                const reviewDB = docSnap.get(\"review\");\n                if (reviewDB === undefined) {\n                    console.log(\"There was no saved review\");\n                } else {\n                    // put the post in the text area but check if it's undefined\n                    setReview(reviewDB);\n                    console.log(\"There was a saved review: \" + reviewDB);\n\n                    // check if there is a rating\n                    const tvRating = docSnap.get(\"rating\");\n                    console.log(\"tvRating rating\", JSON.stringify(tvRating));\n                    setRating(tvRating ? tvRating : 0);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                console.log(\"error trying to get document from firestore\")\n            })\n\n    }, [])\n\n\n  return (\n    <TvDetailContainer>\n        {TvDetail ? <DisplayTvDetail \n            TvDetail={TvDetail}\n            review={review}\n            setReview={setReview}\n            rating={rating} \n            ratingChanged={ratingChanged}\n            clearReview={clearReview}\n            saveReview={saveReview}\n        /> \n        : <p>Movie Detail</p>}\n    </TvDetailContainer>\n  )\n}\n\nexport default TvDetail"],"mappings":"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"},"metadata":{},"sourceType":"module"}