{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyusuf/movie-rating-sideproject/src/pages/MovieDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport img from \"../NoMoviePoster.jpeg\";\nimport ReactStars from \"react-rating-stars-component\";\nimport moment from 'moment';\nimport { useForm } from \"react-hook-form\";\nimport { db, auth } from \"../firebase\";\nimport { serverTimestamp } from \"firebase/firestore\"; // import Modal from \"react-modal\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetailContainer = styled.div`\n    position: relative;\n    height: calc(100vh - 70px);\n    justify-content: center;\n    align-items: center;\n    display: flex;\n`;\n_c = MovieDetailContainer;\nconst MovieDetailBackgroundDiv = styled.div`\n    width: 95vw;\n    height: 100%;\n    background-size: cover;\n`;\n_c2 = MovieDetailBackgroundDiv;\nconst MovieDetailBlurDiv = styled.div`\n    width: 95vw;\n    height: 100%;\n    backdrop-filter: blur(0px) grayscale(0%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n_c3 = MovieDetailBlurDiv;\nconst MovieDetailInfoDiv = styled.div`\n    width: 80%;\n    height: 500px;\n    display: grid;\n    grid-template-columns: 2fr 4fr;\n    border: 2px solid #000;\n    background:rgba(1,1,1,0.75);    // grey transparent background\n`;\n_c4 = MovieDetailInfoDiv;\nconst MoviePosterandInfoDiv = styled.div`\n    // border: 1px solid #fff;\n    padding: 10px;\n    display: block;\n    text-align: center;\n    overflow: hidden;\n`;\n_c5 = MoviePosterandInfoDiv;\nconst MoviePosterImg = styled.img`\n    width: 225px;\n    height: 325px;\n    margin-top: 20px;\n`;\n_c6 = MoviePosterImg;\nconst MovieInformation = styled.div`\n    display: block;\n    overflow: auto;\n    padding: 10px;\n    // border: 1px solid #fff;\n`;\n_c7 = MovieInformation;\nconst RatingDiv = styled.div`\n    display: flex;\n`;\n_c8 = RatingDiv;\nconst TextareaDiv = styled.div`\n    display: block;\n    margin-top: 1em;\n`;\n_c9 = TextareaDiv;\nconst TextareaMovieReview = styled.textarea`\n    width: 90%;\n    height: 200px;\n    padding: 10px;\n    border-radius: 7px;\n    font-family: 'Cabin', sans-serif;\n    font-size: 18px;\n    background:rgba(1,1,1,0.8);     \n    // color: black;\n    color: white;\n    \n    &:focus {\n        outline: none;\n    }\n`;\n_c10 = TextareaMovieReview;\nconst ButtonGroupDiv = styled.div`\n    width: 90%;\n    padding: 10px;\n    display: flex;\n    justify-content: right;\n`;\n_c11 = ButtonGroupDiv;\nconst Button = styled.button`\n    padding: 0;\n    border-radius: 7px;\n    width: 60px;\n    height: 25px;\n    border: none;\n    margin-right: 8px;\n    transition: all 0.2s ease;\n    color: black;\n    font-family: 'Dosis', sans-serif;\n\n    &:hover {\n        transform: scale(1.05);\n        cursor: pointer;\n    }\n\n    &.save {\n        background-color: #00FA9A;\n\n    }\n\n    &.clear {\n        background-color: #C0C0C0;\n\n    }\n`;\n_c12 = Button;\nconst H2RatingNumber = styled.h2`\n    margin: 12px 0 10px 10px;\n\n    &.ratingString {\n        margin: 16px 0 10px 10px;\n        font-size: 16px;\n\n\n    }\n\n`;\n_c13 = H2RatingNumber;\nconst H3Tag = styled.h3`\n    font-family: 'Fredoka One', cursive;\n    font-size: 34px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n`;\n_c14 = H3Tag;\nconst H4Tag = styled.h4`\n    font-style: italic;\n    color: white;\n`;\n_c15 = H4Tag;\n\nconst DisplayMovieDetail = _ref => {\n  let {\n    movieDetail,\n    rating,\n    ratingChanged,\n    review,\n    setReview,\n    handleSubmit,\n    clearReview,\n    saveReview\n  } = _ref;\n  const image = movieDetail.poster_path ? 'https://image.tmdb.org/t/p/original/' + movieDetail.poster_path : img;\n  const backgroundImage = movieDetail.backdrop_path ? 'https://image.tmdb.org/t/p/original/' + movieDetail.backdrop_path : \"\";\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MovieDetailBackgroundDiv, {\n      style: {\n        backgroundImage: `url(${backgroundImage})`\n      },\n      children: /*#__PURE__*/_jsxDEV(MovieDetailBlurDiv, {\n        children: /*#__PURE__*/_jsxDEV(MovieDetailInfoDiv, {\n          children: [/*#__PURE__*/_jsxDEV(MoviePosterandInfoDiv, {\n            children: [/*#__PURE__*/_jsxDEV(MoviePosterImg, {\n              style: {},\n              src: image,\n              alt: \"No Movie Poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), movieDetail.release_date ? /*#__PURE__*/_jsxDEV(H4Tag, {\n              style: {\n                margin: '5px'\n              },\n              children: moment(movieDetail.release_date, \"Y-M-D\").format(\"MMMM D, Y\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 56\n            }, this) : null, movieDetail.tagline ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movieDetail.tagline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 52\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MovieInformation, {\n            children: [/*#__PURE__*/_jsxDEV(H3Tag, {\n              children: movieDetail.original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), movieDetail.genres.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontStyle: 'italic',\n                marginBottom: '5px',\n                color: 'red'\n              },\n              children: movieDetail.genres.map(genre => {\n                return genre.name;\n              }).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this) : null, movieDetail.overview ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movieDetail.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 53\n            }, this) : null, /*#__PURE__*/_jsxDEV(RatingDiv, {\n              children: [/*#__PURE__*/_jsxDEV(ReactStars, {\n                value: Math.max(0, rating),\n                count: 10,\n                onChange: ratingChanged,\n                size: 30,\n                isHalf: true,\n                emptyIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 44\n                }, this),\n                halfIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-star-half-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 43\n                }, this),\n                fullIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 43\n                }, this),\n                activeColor: \"#98FB98\"\n              }, `stars_${rating}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), rating ? /*#__PURE__*/_jsxDEV(H2RatingNumber, {\n                children: rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 43\n              }, this) : /*#__PURE__*/_jsxDEV(H2RatingNumber, {\n                className: \"ratingString\",\n                children: \"No Rating Yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextareaDiv, {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  margin: '0 0 5px 0'\n                },\n                children: \"Review: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextareaMovieReview // {...register(\"review\")}\n              , {\n                spellCheck: \"false\",\n                id: \"textAreaReview\",\n                placeholder: 'This movie sucks...? or?',\n                type: \"text\",\n                value: review,\n                onChange: e => setReview(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroupDiv, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"clear\",\n                  onClick: handleSubmit(clearReview),\n                  children: \"clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"save\",\n                  onClick: handleSubmit(saveReview),\n                  children: \"save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n\n_c16 = DisplayMovieDetail;\n\nconst MovieDetail = () => {\n  _s();\n\n  const movieId = useParams().id;\n  const API_KEY = \"9a637b178d3f0923dd00ef0550b24e90\";\n  const [movieDetail, setMovieDetail] = useState();\n  const [rating, setRating] = useState(0);\n  const [review, setReview] = useState(\"\");\n  const {\n    register,\n    getValues,\n    handleSubmit\n  } = useForm();\n  const MOVIE_DETAIL_URL = \"https://api.themoviedb.org/3/movie/\" + movieId + \"?\" + new URLSearchParams({\n    api_key: API_KEY\n  });\n\n  const ratingChanged = newRating => {\n    console.log(newRating);\n    setRating(newRating);\n    db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(movieId).set({\n      rating: newRating\n    }, {\n      merge: true\n    });\n  };\n\n  const clearReview = () => {\n    console.log(\"clearing review\");\n    setReview(\"\");\n    console.log(review);\n    setRating(0);\n    document.getElementById(\"textAreaReview\").value = \"\";\n    console.log(\"text area should be empty\");\n    db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(movieId).delete();\n  };\n\n  const saveReview = () => {\n    if (review) {\n      db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(movieId).set({\n        review: review,\n        timestamp: serverTimestamp()\n      }, {\n        merge: true\n      });\n      alert(\"review has been saved\");\n    }\n  };\n\n  useEffect(() => {\n    axios.get(MOVIE_DETAIL_URL).then(resp => {\n      console.log(resp.data);\n      setMovieDetail(resp.data);\n    });\n    db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(movieId).get().then(docSnap => {\n      const reviewDB = docSnap.get(\"review\");\n\n      if (reviewDB === undefined) {\n        console.log(\"There was no saved review\");\n      } else {\n        // put the post in the text area but check if it's undefined\n        setReview(reviewDB);\n        console.log(\"There was a saved review: \" + reviewDB); // check if there is a rating\n\n        const movieRating = docSnap.get(\"rating\");\n        console.log(\"movieRating rating\", JSON.stringify(movieRating));\n        setRating(movieRating ? movieRating : 0);\n      }\n    }).catch(err => {\n      console.log(err);\n      console.log(\"error trying to get document from firestore\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MovieDetailContainer, {\n    children: movieDetail ? /*#__PURE__*/_jsxDEV(DisplayMovieDetail, {\n      movieDetail: movieDetail,\n      review: review,\n      setReview: setReview,\n      rating: rating,\n      handleSubmit: handleSubmit,\n      ratingChanged: ratingChanged,\n      clearReview: clearReview,\n      saveReview: saveReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Movie Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetail, \"iwCpEL3YiWDPJ6JWgJK2ped6E3o=\", false, function () {\n  return [useParams, useForm];\n});\n\n_c17 = MovieDetail;\nexport default MovieDetail;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n\n$RefreshReg$(_c, \"MovieDetailContainer\");\n$RefreshReg$(_c2, \"MovieDetailBackgroundDiv\");\n$RefreshReg$(_c3, \"MovieDetailBlurDiv\");\n$RefreshReg$(_c4, \"MovieDetailInfoDiv\");\n$RefreshReg$(_c5, \"MoviePosterandInfoDiv\");\n$RefreshReg$(_c6, \"MoviePosterImg\");\n$RefreshReg$(_c7, \"MovieInformation\");\n$RefreshReg$(_c8, \"RatingDiv\");\n$RefreshReg$(_c9, \"TextareaDiv\");\n$RefreshReg$(_c10, \"TextareaMovieReview\");\n$RefreshReg$(_c11, \"ButtonGroupDiv\");\n$RefreshReg$(_c12, \"Button\");\n$RefreshReg$(_c13, \"H2RatingNumber\");\n$RefreshReg$(_c14, \"H3Tag\");\n$RefreshReg$(_c15, \"H4Tag\");\n$RefreshReg$(_c16, \"DisplayMovieDetail\");\n$RefreshReg$(_c17, \"MovieDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","styled","axios","img","ReactStars","moment","useForm","db","auth","serverTimestamp","MovieDetailContainer","div","MovieDetailBackgroundDiv","MovieDetailBlurDiv","MovieDetailInfoDiv","MoviePosterandInfoDiv","MoviePosterImg","MovieInformation","RatingDiv","TextareaDiv","TextareaMovieReview","textarea","ButtonGroupDiv","Button","button","H2RatingNumber","h2","H3Tag","h3","H4Tag","h4","DisplayMovieDetail","movieDetail","rating","ratingChanged","review","setReview","handleSubmit","clearReview","saveReview","image","poster_path","backgroundImage","backdrop_path","release_date","margin","format","tagline","original_title","genres","length","fontStyle","marginBottom","color","map","genre","name","join","overview","Math","max","e","target","value","MovieDetail","movieId","id","API_KEY","setMovieDetail","setRating","register","getValues","MOVIE_DETAIL_URL","URLSearchParams","api_key","newRating","console","log","collection","doc","currentUser","uid","set","merge","document","getElementById","delete","timestamp","alert","get","then","resp","data","docSnap","reviewDB","undefined","movieRating","JSON","stringify","catch","err"],"sources":["/Users/andrewyusuf/movie-rating-sideproject/src/pages/MovieDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport img from \"../NoMoviePoster.jpeg\";\nimport ReactStars from \"react-rating-stars-component\";\nimport moment from 'moment';\nimport {useForm} from \"react-hook-form\";\nimport {db, auth} from \"../firebase\"\nimport {serverTimestamp} from \"firebase/firestore\";\n// import Modal from \"react-modal\"\n\n\nconst MovieDetailContainer = styled.div`\n    position: relative;\n    height: calc(100vh - 70px);\n    justify-content: center;\n    align-items: center;\n    display: flex;\n`\n\nconst MovieDetailBackgroundDiv = styled.div`\n    width: 95vw;\n    height: 100%;\n    background-size: cover;\n`\n\nconst MovieDetailBlurDiv = styled.div `\n    width: 95vw;\n    height: 100%;\n    backdrop-filter: blur(0px) grayscale(0%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst MovieDetailInfoDiv = styled.div`\n    width: 80%;\n    height: 500px;\n    display: grid;\n    grid-template-columns: 2fr 4fr;\n    border: 2px solid #000;\n    background:rgba(1,1,1,0.75);    // grey transparent background\n`\nconst MoviePosterandInfoDiv = styled.div`\n    // border: 1px solid #fff;\n    padding: 10px;\n    display: block;\n    text-align: center;\n    overflow: hidden;\n`\n\nconst MoviePosterImg = styled.img`\n    width: 225px;\n    height: 325px;\n    margin-top: 20px;\n`\n\nconst MovieInformation = styled.div`\n    display: block;\n    overflow: auto;\n    padding: 10px;\n    // border: 1px solid #fff;\n`\nconst RatingDiv = styled.div`\n    display: flex;\n`\nconst TextareaDiv = styled.div`\n    display: block;\n    margin-top: 1em;\n`\nconst TextareaMovieReview = styled.textarea`\n    width: 90%;\n    height: 200px;\n    padding: 10px;\n    border-radius: 7px;\n    font-family: 'Cabin', sans-serif;\n    font-size: 18px;\n    background:rgba(1,1,1,0.8);     \n    // color: black;\n    color: white;\n    \n    &:focus {\n        outline: none;\n    }\n`\n\nconst ButtonGroupDiv = styled.div`\n    width: 90%;\n    padding: 10px;\n    display: flex;\n    justify-content: right;\n`\n\nconst Button = styled.button`\n    padding: 0;\n    border-radius: 7px;\n    width: 60px;\n    height: 25px;\n    border: none;\n    margin-right: 8px;\n    transition: all 0.2s ease;\n    color: black;\n    font-family: 'Dosis', sans-serif;\n\n    &:hover {\n        transform: scale(1.05);\n        cursor: pointer;\n    }\n\n    &.save {\n        background-color: #00FA9A;\n\n    }\n\n    &.clear {\n        background-color: #C0C0C0;\n\n    }\n`\n\nconst H2RatingNumber = styled.h2`\n    margin: 12px 0 10px 10px;\n\n    &.ratingString {\n        margin: 16px 0 10px 10px;\n        font-size: 16px;\n\n\n    }\n\n`\n\nconst H3Tag = styled.h3`\n    font-family: 'Fredoka One', cursive;\n    font-size: 34px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n`\n\nconst H4Tag = styled.h4`\n    font-style: italic;\n    color: white;\n`\n\nconst DisplayMovieDetail = ({movieDetail, rating, ratingChanged, review, setReview, handleSubmit, clearReview, saveReview}) => {\n    const image = movieDetail.poster_path ? 'https://image.tmdb.org/t/p/original/' + movieDetail.poster_path : img;\n    const backgroundImage =  movieDetail.backdrop_path ? 'https://image.tmdb.org/t/p/original/' + movieDetail.backdrop_path : \"\";\n\n    \n    return (\n        <React.Fragment>\n            <MovieDetailBackgroundDiv style={{backgroundImage: `url(${backgroundImage})`}}>\n                <MovieDetailBlurDiv>\n                    <MovieDetailInfoDiv>\n                        <MoviePosterandInfoDiv>\n                            <MoviePosterImg style={{}} src={image} alt=\"No Movie Poster\"/>\n                            {movieDetail.release_date? <H4Tag style={{margin: '5px'}}>{moment(movieDetail.release_date, \"Y-M-D\").format(\"MMMM D, Y\")}</H4Tag> : null}\n                            {movieDetail.tagline ? <p>{movieDetail.tagline}</p> : null}\n                        </MoviePosterandInfoDiv>\n                        <MovieInformation>\n                            <H3Tag>{movieDetail.original_title}</H3Tag>\n                            {movieDetail.genres.length ? (\n                            <p style={{fontStyle: 'italic', marginBottom: '5px', color: 'red'}}>\n\n                                {movieDetail.genres.map(genre => {return genre.name}).join(\", \")}\n                            </p>\n                            ) : null}\n                            {movieDetail.overview ? <p>{movieDetail.overview}</p> : null}\n                            <RatingDiv>\n                                <ReactStars\n                                key={`stars_${rating}`}\n                                value={Math.max(0, rating)}\n                                count={10}\n                                onChange={ratingChanged}\n                                size={30}\n                                isHalf={true}\n                                emptyIcon={<i className=\"far fa-star\"></i>}\n                                halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\n                                fullIcon={<i className=\"fa fa-star\"></i>}\n                                activeColor=\"#98FB98\"\n                                />\n                                {rating ? <H2RatingNumber>{rating}</H2RatingNumber> : <H2RatingNumber className='ratingString'>No Rating Yet</H2RatingNumber>}\n                            </RatingDiv>\n                            <TextareaDiv>\n                                <h5 style={{margin: '0 0 5px 0'}}>Review: </h5>\n                                <TextareaMovieReview \n                                    // {...register(\"review\")}\n                                    spellCheck=\"false\"\n                                    id=\"textAreaReview\"\n                                    placeholder={'This movie sucks...? or?'}\n                                    type=\"text\"\n                                    value={review}\n                                    onChange={(e) => setReview(e.target.value)}\n                                ></TextareaMovieReview>\n                                <ButtonGroupDiv>\n                                    <Button className='clear' onClick={handleSubmit(clearReview)}>clear</Button>\n                                    <Button className='save' onClick={handleSubmit(saveReview)}>save</Button>\n                                </ButtonGroupDiv>\n                            </TextareaDiv>\n                            \n                        </MovieInformation>\n                \n                    </MovieDetailInfoDiv>\n                </MovieDetailBlurDiv>\n            </MovieDetailBackgroundDiv>\n        </React.Fragment>\n    )\n\n}\n\n\nconst MovieDetail = () => {\n    const movieId = useParams().id;\n    const API_KEY = \"9a637b178d3f0923dd00ef0550b24e90\";\n    const [movieDetail, setMovieDetail] = useState();\n\n    const [rating, setRating] = useState(0);\n    const [review, setReview] = useState(\"\");\n    const {register, getValues, handleSubmit} = useForm();\n\n\n    const MOVIE_DETAIL_URL = \"https://api.themoviedb.org/3/movie/\" + movieId + \n        \"?\" + new URLSearchParams({api_key: API_KEY});\n\n    const ratingChanged = (newRating) => {\n        console.log(newRating);\n        setRating(newRating);\n        db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(movieId)\n            .set(\n            {rating : newRating},\n            {merge : true})\n    };\n\n    const clearReview = () => {\n        console.log(\"clearing review\");\n        setReview(\"\");\n        console.log(review);\n        setRating(0);\n        document.getElementById(\"textAreaReview\").value = \"\";\n        \n        console.log(\"text area should be empty\");\n        db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(movieId)\n            .delete();\n    }\n\n    const saveReview = () => {\n        if (review) {\n            db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(movieId)\n            .set(\n            {   review : review,\n                timestamp : serverTimestamp()\n            },\n            {merge: true});\n            alert(\"review has been saved\");\n        }\n    }\n\n\n\n    useEffect(() => {\n        axios.get(MOVIE_DETAIL_URL)\n        .then(resp => {\n            console.log(resp.data);\n            setMovieDetail(resp.data);\n        })\n\n        db.collection(\"movies\").doc(auth.currentUser.uid).collection(\"reviews\").doc(movieId).get()\n            .then((docSnap) => {\n                const reviewDB = docSnap.get(\"review\");\n                if (reviewDB === undefined) {\n                    console.log(\"There was no saved review\");\n                } else {\n                    // put the post in the text area but check if it's undefined\n                    setReview(reviewDB);\n                    console.log(\"There was a saved review: \" + reviewDB);\n\n                    // check if there is a rating\n                    const movieRating = docSnap.get(\"rating\");\n                    console.log(\"movieRating rating\", JSON.stringify(movieRating));\n                    setRating(movieRating ? movieRating : 0);\n                }\n\n                \n            })\n            .catch((err) => {\n                console.log(err);\n                console.log(\"error trying to get document from firestore\")\n            })\n\n    }, []);\n\n\n  return (\n    <MovieDetailContainer>\n        {movieDetail ? <DisplayMovieDetail \n            movieDetail={movieDetail}\n            review={review}\n            setReview={setReview}\n            rating={rating} \n            handleSubmit={handleSubmit}\n            ratingChanged={ratingChanged}\n            clearReview={clearReview}\n            saveReview={saveReview}\n        /> \n        : <p>Movie Detail</p>}\n    </MovieDetailContainer>\n  )\n}\n\nexport default MovieDetail"],"mappings":"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"},"metadata":{},"sourceType":"module"}